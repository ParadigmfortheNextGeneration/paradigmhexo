var cheerio   = require('cheerio');
var fs        = require('fs');
var urlparser = require('url');

module.exports = function(content, html_injection_items, disable) {
  var $ = cheerio.load(content);
  
  // Manual html injection by links
  // To make this more extensible we could have a configuration setting to determine which root folder triggers the replacement.
  // For now we just use any non-hostname url that starts with 'html/'
  
 
  // Ajax injection items (for items that we don't want to influence search engines or data mining.).
  if (!html_injection_items) {
    if (this.config.html_injection_items) {
      html_injection_items = this.config.html_injection_items;
    }
    
  }
  if (html_injection_items) {
    injection_count = html_injection_items.length;
  }
  else {
    injection_count = 0;
  }
  if (content && (injection_count > 0) && disable !== true) {
    
    var paragraph_count = $('p').length
    // TODO: Add in site level and page level paragraph count and interval minimums 
    if (paragraph_count > 3) {
      var interval = Math.floor(paragraph_count / (injection_count+1))
      var insert_point = interval
      for (i = 0; i < injection_count; i++) {
        $('p').eq(insert_point).after('<div class="injection_html_item injection_html" data-injection-html="' + html_injection_items[i] + '"></div>')
        insert_point = insert_point + interval
      }
    }
    
  }
   $('a').each(function(index, element) {
    // This has to be done after the ajax injection, otherwise paragraphs inside can be injected.
    var href = $(element).attr('href');
        if (href) {
          var parsed = urlparser.parse(href);
          if (parsed.path && !parsed.hostname) {
            var path_array = parsed.path.split("/");
            if (path_array[1] == '_html') {
              path_array.shift()
              path_to_html = path_array.join('/');
              // /Users/Pongovi/Sites/scghexo/node_modules/hexo-html-injection/lib
              // TODO: Inject link to html page? account for pages that have layout: false
              var file_contents = fs.readFileSync(__dirname + "/../../../source/" + path_to_html, 'utf8');
              $(this).replaceWith(file_contents);
            }
          }
        }
    });
  
  content = $.html();
  return content;
    
};